{"ast":null,"code":"var _jsxFileName = \"/Users/lakshmipalchuri/Desktop/Book-Recommendation/src/components/searchPage/searchPage.js\";\nimport React, { Component } from \"react\";\nimport { render } from 'react-dom';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport { useEffect, useState, useRef } from 'react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPage = () => {\n  //     const [rowData, setRowData] = useState([]);\n  //     const gridRef = useRef(null);\n  //    useEffect(() => {\n  //        fetch('https://www.ag-grid.com/example-assets/row-data.json')\n  //            .then(result => result.json())\n  //            .then(rowData => setRowData(rowData))\n  //    }, []);\n  //   const onButtonClick = e => {\n  //       const selectedNodes = gridRef.current.api.getSelectedNodes()\n  //       const selectedData = selectedNodes.map( node => node.data )\n  //       const selectedDataStringPresentation = selectedData.map( node => `${node.make} ${node.model}`).join(', ')\n  //       alert(`Selected nodes: ${selectedDataStringPresentation}`)\n  //   }\n  const rowData = [{\n    make: \"Toyota\",\n    model: \"Celica\",\n    price: 35000\n  }, {\n    make: \"Ford\",\n    model: \"Mondeo\",\n    price: 32000\n  }, {\n    make: \"Porsche\",\n    model: \"Boxter\",\n    price: 72000\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 400,\n      width: 600\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact //   ref={gridRef}\n    , {\n      rowData: rowData,\n      rowSelection: \"multiple\",\n      children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"make\",\n        sortable: true,\n        filter: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"make\",\n        sortable: true,\n        filter: true,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"model\",\n        sortable: true,\n        filter: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"price\",\n        sortable: true,\n        filter: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 8\n  }, this);\n};\n\n_c = SearchPage;\nexport { SearchPage }; // // const url = '/rest/login'\n// class SearchPage extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//         }\n//     }\n//     render() {\n//      return (  \n//         <div>\n//          Search me!\n//         </div>\n//     );\n//     }\n// }\n// export default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/lakshmipalchuri/Desktop/Book-Recommendation/src/components/searchPage/searchPage.js"],"names":["React","Component","render","AgGridColumn","AgGridReact","useEffect","useState","useRef","SearchPage","rowData","make","model","price","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,eAAxC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,2CAAP;AACA,OAAO,mDAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACzB;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEI,QAAMC,OAAO,GAAG,CACZ;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE,QAAxB;AAAkCC,IAAAA,KAAK,EAAE;AAAzC,GADY,EAEZ;AAACF,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,KAAK,EAAE,QAAtB;AAAgCC,IAAAA,KAAK,EAAE;AAAvC,GAFY,EAGZ;AAACF,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,KAAK,EAAE,QAAzB;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GAHY,CAAhB;AAMD,sBAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,GAAT;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAAxC;AAAA,2BAEI,QAAC,WAAD,CACC;AADD;AAEG,MAAA,OAAO,EAAEL,OAFZ;AAGG,MAAA,YAAY,EAAC,UAHhB;AAAA,8BAIG,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,MAApB;AAA2B,QAAA,QAAQ,EAAE,IAArC;AAA2C,QAAA,MAAM,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAJH,eAKG,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,MAApB;AAA2B,QAAA,QAAQ,EAAE,IAArC;AAA2C,QAAA,MAAM,EAAE,IAAnD;AAAyD,QAAA,iBAAiB,EAAE;AAA5E;AAAA;AAAA;AAAA;AAAA,cALH,eAMI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,OAApB;AAA4B,QAAA,QAAQ,EAAE,IAAtC;AAA4C,QAAA,MAAM,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,OAApB;AAA4B,QAAA,QAAQ,EAAE,IAAtC;AAA4C,QAAA,MAAM,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAeF,CAtCD;;KAAMD,U;AAwCN,SAASA,UAAT,G,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from 'react-dom';\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport { useEffect, useState, useRef } from 'react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nconst SearchPage = () => {\n//     const [rowData, setRowData] = useState([]);\n//     const gridRef = useRef(null);\n\n//    useEffect(() => {\n//        fetch('https://www.ag-grid.com/example-assets/row-data.json')\n//            .then(result => result.json())\n//            .then(rowData => setRowData(rowData))\n//    }, []);\n\n//   const onButtonClick = e => {\n//       const selectedNodes = gridRef.current.api.getSelectedNodes()\n//       const selectedData = selectedNodes.map( node => node.data )\n//       const selectedDataStringPresentation = selectedData.map( node => `${node.make} ${node.model}`).join(', ')\n//       alert(`Selected nodes: ${selectedDataStringPresentation}`)\n//   }\n\n    const rowData = [\n        {make: \"Toyota\", model: \"Celica\", price: 35000},\n        {make: \"Ford\", model: \"Mondeo\", price: 32000},\n        {make: \"Porsche\", model: \"Boxter\", price: 72000}\n    ];\n\n   return (\n\n       <div className=\"ag-theme-alpine\" style={{height: 400, width: 600}}>\n          {/* <button onClick={onButtonClick}>Get selected rows</button> */}\n           <AgGridReact\n            //   ref={gridRef}\n              rowData={rowData}\n              rowSelection=\"multiple\">\n              <AgGridColumn field=\"make\" sortable={true} filter={true}></AgGridColumn>\n              <AgGridColumn field=\"make\" sortable={true} filter={true} checkboxSelection={true}></AgGridColumn>\n               <AgGridColumn field=\"model\" sortable={true} filter={true}></AgGridColumn>\n               <AgGridColumn field=\"price\" sortable={true} filter={true}></AgGridColumn>\n           </AgGridReact>\n       </div>\n  );\n};\n\nexport { SearchPage };\n\n// // const url = '/rest/login'\n\n// class SearchPage extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n           \n//         }\n//     }\n    \n//     render() {\n     \n//      return (  \n//         <div>\n//          Search me!\n         \n//         </div>\n//     );\n//     }\n// }\n\n// export default SearchPage;\n\n"]},"metadata":{},"sourceType":"module"}