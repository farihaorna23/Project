[{"/Users/mahirmahboob/Desktop/nodejs/frontend/src/index.js":"1","/Users/mahirmahboob/Desktop/nodejs/frontend/src/App.js":"2","/Users/mahirmahboob/Desktop/nodejs/frontend/src/reportWebVitals.js":"3","/Users/mahirmahboob/Desktop/nodejs/frontend/src/Notfound.js":"4","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/homepage/homepage.js":"5","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Signup.js":"6","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/navbar/navbar.js":"7","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/quiz/quiz.js":"8","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/searchPage/searchPage.js":"9","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Login.js":"10","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/surpriseMe/surpriseMe.js":"11","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/genre/genre.js":"12","/Users/mahirmahboob/Desktop/nodejs/frontend/src/testData/data.js":"13","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/userdashboard.js":"14","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/tobereadlistings.js":"15","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/deletetobereadentry.js":"16","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/addtobereadentry.js":"17","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/searchbar.js":"18","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/forgot.js":"19","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/forgotusername.js":"20"},{"size":530,"mtime":1633449520447,"results":"21","hashOfConfig":"22"},{"size":2574,"mtime":1634778312471,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1632672688523,"results":"24","hashOfConfig":"22"},{"size":346,"mtime":1632672688518,"results":"25","hashOfConfig":"22"},{"size":4824,"mtime":1633541081183,"results":"26","hashOfConfig":"22"},{"size":5944,"mtime":1634781015119,"results":"27","hashOfConfig":"22"},{"size":2089,"mtime":1632672688520,"results":"28","hashOfConfig":"22"},{"size":5506,"mtime":1634267717561,"results":"29","hashOfConfig":"22"},{"size":6299,"mtime":1632950402054,"results":"30","hashOfConfig":"22"},{"size":3713,"mtime":1634857979806,"results":"31","hashOfConfig":"22"},{"size":1952,"mtime":1634267283765,"results":"32","hashOfConfig":"22"},{"size":2411,"mtime":1634749086003,"results":"33","hashOfConfig":"22"},{"size":3288,"mtime":1633448993412,"results":"34","hashOfConfig":"22"},{"size":2203,"mtime":1634844911382,"results":"35","hashOfConfig":"22"},{"size":1232,"mtime":1634403553222,"results":"36","hashOfConfig":"22"},{"size":597,"mtime":1634403549779,"results":"37","hashOfConfig":"22"},{"size":1764,"mtime":1634854035961,"results":"38","hashOfConfig":"22"},{"size":942,"mtime":1634865715407,"results":"39","hashOfConfig":"22"},{"size":4283,"mtime":1634778576337,"results":"40","hashOfConfig":"22"},{"size":2774,"mtime":1634783507073,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ueyz9t",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"/Users/mahirmahboob/Desktop/nodejs/frontend/src/index.js",[],["90","91"],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/App.js",["92"],"import React, { Component } from \"react\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Notfound from \"./Notfound\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Homepage from \"./components/homepage/homepage\";\nimport { SearchPage } from \"./components/searchPage/searchPage\";\nimport GenreRecs from \"./components/genre/genre\";\nimport userdashboard from \"./components/dashboard/userdashboard\";\nimport QuizRecs from \"./components/quiz/quiz\";\nimport SurpriseMeRecs from \"./components/surpriseMe/surpriseMe\";\nimport forgot from \"./components/forgot\";\nimport forgotusername from \"./components/forgotusername\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: false,\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin() {\n    console.log(\"in handle login:  \");\n    this.setState({\n      isLoggedIn: true,\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <div className=\"App\">\n            <Navbar />\n            <div>\n              <Route\n                exact\n                path={\"/\"}\n                render={(props) => (\n                  <Login\n                    {...props}\n                    isLoggedIn={this.state.isLoggedIn}\n                    handleLogin={this.handleLogin}\n                  />\n                )}\n              />\n              <Route path=\"/home\" component={Homepage} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/searchdir\" component={SearchPage} />\n              <Route path=\"/recGenre\" component={GenreRecs} />\n              <Route path=\"/userdashboard\" component={userdashboard} />\n              <Route path=\"/recQuiz\" component={QuizRecs} />\n              <Route path=\"/recSurpriseMe\" component={SurpriseMeRecs} />\n              <Route path=\"/forgot\" component={forgot} />\n              <Route path=\"/forgotusername\" component={forgotusername} />\n              {/* <Route component={Notfound} /> */}\n            </div>\n          </div>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n// import './App.css';\n// import { MainContainer } from './mainContainer';\n// import Navbar from './components/navbar/navbar';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Navbar/>\n//       <MainContainer/>\n//     </div>\n//   );\n// }\n\n// export default App;\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/reportWebVitals.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/Notfound.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/homepage/homepage.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Signup.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/navbar/navbar.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/quiz/quiz.js",["93","94","95","96","97","98"],"import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button'; \nconst url = \"/takeaquiz\";\n\n// var res = {name: \"\", picture: \"\",author: \"\", genre: \"\", synopsis: \"\" };\nclass QuizRecs extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      genre: '',\n      age: '',\n      page: '',\n      date: '',\n      triggers: '',\n      recommendations:[],\n    }\n  }\n\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    // get form data out of state\n    //const { genre, age, page, date, triggers } = this.state;\n\n    fetch(url , {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n          genre: this.state.genre,\n          age: this.state.age,\n          page: this.state.page,\n          date: this.state.date,\n          triggers: this.state.triggers,\n      })\n    }).then(result =>result.json())\n      .then(data => {\n        this.setState({\n          recommendations:data\n        })\n      })\n    } // end of onSubmit\n\n    render() {\n      const { classes } = this.props;\n      const {genre, age, page, date, triggers } = this.state;\n\n      return (\n        <div className=\"session\">\n        <h1>Take a quiz to find your next read!</h1>\n          <div className=\"register-form\">\n            <form onSubmit={this.onSubmit}>\n              <select value={this.value} name=\"genre\" onChange={this.onChange}> Pick the first genre\n                <option value=\"romance\">Romance</option>\n                <option value=\"history\">History</option>\n                <option value=\"mystery\">Mystery</option>\n                <option value=\"cooking\">Cooking</option>\n                <option value=\"fantasy\">Fantasy</option>\n                <option value=\"drama\">Drama</option>\n                <option value=\"action\">Action</option>\n                <option value=\"adventure\">Adventure</option>\n                <option value=\"detective\">Detective</option>\n              </select>\n              <select value={this.value} name=\"age\" onChange={this.onChange}> Pick a age range\n                <option value=\"child\">child</option>\n                <option value=\"young adult\">young adult</option>\n                <option value=\"adult\">adult</option>\n                <option value=\"all\">all</option>\n              </select>\n              <select value={this.value} name=\"page\" onChange={this.onChange}> Pick a page range\n                <option value=\"100\">100</option>\n                <option value=\"150\">150</option>\n                <option value=\"200\">200</option>\n                <option value=\"250\">250</option>\n                <option value=\"300\">300</option>\n                <option value=\"350\">350</option>\n                <option value=\"400\">400+</option>\n              </select>\n              <select value={this.value} name=\"date\" onChange={this.onChange}> Pick publication date\n                <option value=\"1960\">1960</option>\n                <option value=\"1970\">1970</option>\n                <option value=\"1980\">1980</option>\n                <option value=\"1990\">1990</option>\n                <option value=\"2000\">2000</option>\n                <option value=\"2005\">2005</option>\n                <option value=\"2010\">2010</option>\n                <option value=\"2015\">2015</option>\n                <option value=\"2020\">2020</option>\n                <option value=\"2021\">2021</option>\n              </select>\n              <select value={this.value} name=\"triggers\" onChange={this.onChange}> Pick a triggers\n                <option value=\"violence\">violence</option>\n                <option value=\"death\">death</option>\n                <option value=\"horror\">horror</option>\n                <option value=\"blood\">blood</option>\n                <option value=\"suicide\">suicide</option>\n                <option value=\"kidnapping\">kidnapping</option>\n                <option value=\"war\">war</option>\n                <option value=\"vampire\">vampire</option>\n                <option value=\"Animal cruelty\">Animal cruelty</option>\n                <option value=\"No trigger warning\">No trigger warning</option>\n              </select>\n              <Button type='Submit' variant=\"contained\" color=\"primary\">\n                Submit\n              </Button>\n            </form>\n            <div className=\"quiz-recommendation\">\n                  {\n                      this.state.recommendations.map(rec=>(\n                          <div key={rec.book_name}className=\"book-recommendation\">\n                          <h2> Title: {rec.book_name}</h2>\n                          <h2> Author: {rec.author}</h2>\n                          <h2> Rating: {rec.rating}</h2>\n                          <h2> Age Range: {rec.age_range}</h2>\n                          <h2> Page: {rec.maximum_pages}</h2>\n                          <h2> Publication Date: {rec.publication_date}</h2>\n                          <h2> Best Seller: {rec.best_seller}</h2>\n                          <h2>Series: {rec.series}</h2>\n                          </div>\n                        ))\n                  }\n            </div>\n          </div>\n        </div>\n\n      );\n  }\n}\n\nexport default QuizRecs;\n\n\n/*\nclass QuizRecs extends Component {\n    constructor() {\n        super();\n        this.state = {\n           \n        }\n    }\n    \n    render() {\n     \n     return (  \n        <div>\n         Take a quiz\n         <Quiz quiz={quiz}/>\n        </div>\n    );\n    }\n}\n\n\n*/","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/searchPage/searchPage.js",["99"],"import React from \"react\";\nimport { useState } from 'react';\nimport { useEffect } from \"react\";\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\n// const url = \"http://localhost:3000/search\";\nconst SearchPage = () => {\n    //test data\n    /*\n    const rowData = [\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"}\n    ];\n    */\n\n    //const rowData = [];\n\n    useEffect( () => {\n        fetchItems();\n    }, []);\n\n    const [rowData, setItems] = useState([]);\n\n    const fetchItems = async () => {\n        const data = await fetch('/searchup');\n        const rowData = await data.json();\n        setItems(rowData);\n    };\n\n\n    // const [rowData, setRowData] = useState([]);\n\n    // useEffect(() => {\n    //     fetch(url)\n    //     .then(result => result.json())\n    //     .then(rowData => setRowData(rowData))\n    // }, []);\n\n\n\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumApi, setGridColumnApi] = useState(null);\n    const searchDivStyle={backgroundColor:\"#dedede\",padding:10}\n    const searchStyle={width:\"40%\",padding:\"10px 20px\",borderRadius:0,outline:0,fontSize:\"100%\"}\n    function onGridReady(params) {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n      }\n    const onFilterTextChange=(e)=>{\n      gridApi.setQuickFilter(e.target.value)\n    }\n    \n    return (\n        <div>\n            <div style={{padding:10, fontSize:40}}>Search our directory!</div>\n            {/* To Do: add filters and sortablilty */}\n            <div style={searchDivStyle}>\n                <input type=\"search\" style={searchStyle} onChange={onFilterTextChange} placeholder=\"search here...\"/>\n            </div>\n            <div className=\"ag-theme-alpine\" style={{paddingLeft: 90, height: 600, width: 1250}}>\n                <AgGridReact\n                    rowData={rowData}\n                    onGridReady={onGridReady}\n                    >\n                    <AgGridColumn field=\"book_name\" filter={true}></AgGridColumn>\n                    <AgGridColumn field=\"author\" filter={true}></AgGridColumn>\n                    <AgGridColumn field=\"genre\" filter=\"agTextColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"rating\" filter=\"agNumberColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"age_range\" filter=\"agTextColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"maximum_pages\" filter=\"agNumberColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"publication_date\" filter=\"agNumberColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"trigger_warning\" filter=\"agTextColumnFilter\"></AgGridColumn>\n                </AgGridReact>\n            </div>\n        </div>\n    );\n};\n    \nexport {SearchPage};\n// // const url = '/rest/login'\n\n// class SearchPage extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n           \n//         }\n//     }\n    \n//     render() {\n     \n//      return (  \n//         <div>\n//          Search me!\n         \n//         </div>\n//     );\n//     }\n// }\n\n// export default SearchPage;\n\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Login.js",["100","101","102"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// import { Link } from \"react-router-dom\";\n\n// const url = '/rest/login'\n\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            user:[],\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleSubmitLogin = (e) => {\n        e.preventDefault();\n\n        fetch('/rest/login', {\n            method: 'POST',\n            redirect: 'follow',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        }).then(response => {\n\n            if (response.status === 401) {\n            alert(\"Wrong combination, please try again\");\n            window.location.href =  'http://localhost:3000/login';\n            \n            }\n            else\n            {\n                \n                //alert(\"successfully Logged In\");\n                console.log(\"sucessfull\");\n                this.props.history.push(`/userdashboard/${this.state.username}`, {state: this.state.username});\n                // this is just a test. we redirect the user to the login page. When he have the dashboard, \n                // we will redirect the user to the proper webpage\n                //window.location.href = 'http://localhost:3000/userdashboard';\n            }\n            })\n            .catch(function(error) {\n            \n                alert(\"Something went wrong\");\n            });\n        }\n    //handle submitlogin\n\n    render() {\n     const username = this.state.username;\n     const password = this.state.password;\n     return (  <div>\n            <b>Log in</b>\n            <br/>\n            <br/>\n            <form onSubmit={this.handleSubmitLogin}>\n                <table border=\"0\">\n                    <tbody>\n                        <tr>\n                            <td>Username:</td>\n                            <td>\n                                <input type=\"username\" name=\"username\" size=\"20\" autoCorrect=\"off\" spellCheck=\"false\"\n                                       autoCapitalize=\"off\" value={username} onChange={this.handleChange}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Password:</td>\n                            <td>\n                                <input type=\"password\" name=\"password\" size=\"20\"\n                                       required value={password} onChange={this.handleChange}/>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <br/>\n                 <input type=\"submit\" value=\"Submit\"/>\n            </form>\n            <a href=\"forgot\">Forgot your password?</a>\n            <br/>\n            <a href=\"forgotusername\">Forgot your username?</a>\n            <br/>\n            <div>\n                Don't have an account? \n                <a href=\"/signup\"> Sign Up Here!</a>\n            </div>\n            <br/>\n            \n        </div>\n        );\n    }\n}\n\nexport default Login;\n\n// import React, { Component } from \"react\";\n\n// // const url = '/rest/login'\n\n// class Login extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n           \n//         }\n//     }\n    \n\n//     render() {\n     \n//      return (  \n//         <div>\n//          Login\n//         </div>\n//     );\n//     }\n// }\n\n// export default Login;\n\n\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/surpriseMe/surpriseMe.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/genre/genre.js",["103"],"import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport \"./genre.css\"\nimport books from \"../../testData/data.js\" \n\nclass GenreRecs extends Component {\n    constructor() {\n        super();\n        this.state = {\n           genres: [\"cooking\", \"romance\", \"drama\", \"fantasy\", \"adventure\", \"action\", \"detective\"], \n           recommendations:[],\n        };\n    };\n   \n    //when a button is clicked, it is going to send a request to server to get the data\n    //and when we get the data back, we would be able to put that in the recommendation array\n    //the get request will get data specific for that genre\n    //data is the array of all the book recommendation\n    //the data that we get back is json data\n\n    \n    handler=(genre)=>{\n        //this is to request data from the server\n       fetch(`http://localhost:5000/home/${genre}`)\n       .then(response=>response.json()) //converts to js. has the parsed data from the server and that becomes the parameter for the next .then\n       .then(data=>{\n        this.setState({\n            recommendations:data //data is response.json\n           })\n       })\n      \n    //this using dummy data incase there is no server. Use this when not connnected to the server.\n    /*\n    const recs=books.filter(book=>book.genre===genre)\n      this.setState({\n          recommendations:recs \n      })\n    */\n\n      } // this is the end of handler\n    \n    render() {\n     return (  \n        <div >\n        <div className=\"button\">\n        {this.state.genres.map(genre => (\n        <Button key={genre} onClick={ ()=>this.handler(genre)} className=\"right\" variant=\"warning\" size=\"lg\">\n        {genre}\n        </Button>\n        ))}\n        \n    </div>\n    <div className=\"recs mt-4\">\n        {\n            this.state.recommendations.map(rec=>(\n                <div key={rec.book_name}className=\"book-card\">\n                <h2> Title: {rec.book_name}</h2>\n                <h2> Author: {rec.author}</h2>\n                <h2> Rating: {rec.rating}</h2>\n                <h2> Age Range: {rec.age_range}</h2>\n                <h2> Page: {rec.maximum_pages}</h2>\n                <h2> Publication Date: {rec.publication_date}</h2>\n                <h2> Best Seller: {rec.best_seller}</h2>\n                <h2>Series: {rec.series}</h2>\n                </div>\n            ))\n        }\n    </div>\n        </div>\n    );\n    }\n}\n\nexport default GenreRecs;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/testData/data.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/userdashboard.js",["104","105","106","107","108","109"],"import React, { Component } from 'react'\nimport { useState } from 'react';\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport ToBeRead from \"./toberead/tobereadlistings.js\";\nimport AddEntry from \"./toberead/addtobereadentry.js\";\nimport Search from 'react-search';\n\n//line 42, height was 500\n\n// const url = \"http://localhost:3000/search\";\n\nconst Dashboard = () => {\n    const rowData = [\n        {title: \"Love Life\", author: \"Amy Azelia\"},\n        {title: \"The Secret Society\", author: \"Adrien Potter\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\"},\n        {title: \"Love Lives\", author: \"Amy Azelia\"},\n        //{title: \"The Secret Societies\", author: \"Adrien Potter\"},\n        //{title: \"Ancient Civilizations\", author: \"Gideon Aberforth\"},\n        //{title: \"Elite Guardiens\", author: \"Loki Odinson\"},\n        //{title: \"Love Lifes\", author: \"Amy Azelia\"},\n        //{title: \"The Secret Societies\", author: \"Adrien Potter\"},\n    ];\n   \n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumApi, setGridColumnApi] = useState(null);\n    const searchDivStyle={backgroundColor:\"#dedede\",padding:10}\n    const searchStyle={width:\"40%\",padding:\"10px 20px\",borderRadius:0,outline:0,fontSize:\"100%\"}\n    function onGridReady(params) {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n      }\n    \n    return (\n        <div>\n            <div style={{paddingLeft:0, fontSize:40}}> Top Five!</div>\n                        \n            <div className=\"ag-theme-alpine\" style={{paddingLeft: 90, height: 250, width: 400}}>\n                <AgGridReact\n                    rowData={rowData}\n                    onGridReady={onGridReady}\n                    >\n                    <AgGridColumn field=\"title\"></AgGridColumn>\n                    <AgGridColumn field=\"author\"></AgGridColumn>\n                    \n                </AgGridReact>\n            </div>\n            <AddEntry/>\n            <ToBeRead/>\n        </div>\n    );\n};\n    \nexport default Dashboard;\n\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/tobereadlistings.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/deletetobereadentry.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/toberead/addtobereadentry.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/dashboard/searchbar.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/forgot.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/forgotusername.js",["110"],"import React, { Component } from \"react\";\n\nclass forgotusername extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            Your_Favorite_Dish: \"\",\n            username: [],\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n\n    }\n\n    handleSubmitSignup = (e) => {\n        e.preventDefault();\n        \n\n        fetch('/forgotusername', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                Your_Favorite_Dish: this.state.Your_Favorite_Dish,\n                email: this.state.email,\n\n\n    })\n        }).then(response=>response.json()) //converts to js. has the parsed data from the server and that becomes the parameter for the next .then\n       .then(data=>{\n        this.setState({\n            username:data //data is response.json\n           })\n       })\n    } \n// End of handlesubmit\n\n\n    render() {\n        const username = this.state.username;\n        const Your_Favorite_Dish = this.state.Your_Favorite_Dish;\n        const email = this.state.email;\n   \n\n     return (  \n        <div>\n            <br/>\n            <form onSubmit={this.handleSubmitSignup}>\n                <table border=\"0\">\n                    <tbody>\n                        <tr>\n                            <td>email:</td>\n                            <td>\n                                <input type=\"email\" name=\"email\" size=\"20\" autoCorrect=\"off\" spellCheck=\"false\"\n                                       autoCapitalize=\"off\" value={email} onChange={this.handleChange}/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Your_Favorite_Dish:</td>\n                            <td>\n                                <input type=\"Your_Favorite_Dish\" name=\"Your_Favorite_Dish\" size=\"20\" autoCorrect=\"off\" spellCheck=\"false\"\n                                       autoCapitalize=\"off\" value={Your_Favorite_Dish} onChange={this.handleChange}/>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <br/>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n            <a href=\"forgot\">Forgot your password?</a>\n            <br/>\n    <div className=\"forgot_username\">\n        {\n            this.state.username.map(rec=>(\n                <div key={rec.username}className=\"username\">\n                <h2> Username: {rec.username}</h2>\n                </div>\n            ))\n        }\n    </div>\n        </div>\n        );\n    }\n}\n\nexport default forgotusername;",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":16},{"ruleId":"115","severity":1,"message":"119","line":50,"column":15,"nodeType":"117","messageId":"118","endLine":50,"endColumn":22},{"ruleId":"115","severity":1,"message":"120","line":51,"column":14,"nodeType":"117","messageId":"118","endLine":51,"endColumn":19},{"ruleId":"115","severity":1,"message":"121","line":51,"column":21,"nodeType":"117","messageId":"118","endLine":51,"endColumn":24},{"ruleId":"115","severity":1,"message":"122","line":51,"column":26,"nodeType":"117","messageId":"118","endLine":51,"endColumn":30},{"ruleId":"115","severity":1,"message":"123","line":51,"column":32,"nodeType":"117","messageId":"118","endLine":51,"endColumn":36},{"ruleId":"115","severity":1,"message":"124","line":51,"column":38,"nodeType":"117","messageId":"118","endLine":51,"endColumn":46},{"ruleId":"115","severity":1,"message":"125","line":62,"column":12,"nodeType":"117","messageId":"118","endLine":62,"endColumn":24},{"ruleId":"115","severity":1,"message":"126","line":2,"column":27,"nodeType":"117","messageId":"118","endLine":2,"endColumn":33},{"ruleId":"115","severity":1,"message":"127","line":2,"column":35,"nodeType":"117","messageId":"118","endLine":2,"endColumn":40},{"ruleId":"115","severity":1,"message":"128","line":2,"column":42,"nodeType":"117","messageId":"118","endLine":2,"endColumn":48},{"ruleId":"115","severity":1,"message":"129","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":13},{"ruleId":"115","severity":1,"message":"130","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"131","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":14},{"ruleId":"115","severity":1,"message":"132","line":28,"column":12,"nodeType":"117","messageId":"118","endLine":28,"endColumn":19},{"ruleId":"115","severity":1,"message":"125","line":29,"column":12,"nodeType":"117","messageId":"118","endLine":29,"endColumn":24},{"ruleId":"115","severity":1,"message":"133","line":30,"column":11,"nodeType":"117","messageId":"118","endLine":30,"endColumn":25},{"ruleId":"115","severity":1,"message":"134","line":31,"column":11,"nodeType":"117","messageId":"118","endLine":31,"endColumn":22},{"ruleId":"115","severity":1,"message":"135","line":45,"column":15,"nodeType":"117","messageId":"118","endLine":45,"endColumn":23},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Notfound' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'genre' is assigned a value but never used.","'age' is assigned a value but never used.","'page' is assigned a value but never used.","'date' is assigned a value but never used.","'triggers' is assigned a value but never used.","'gridColumApi' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'books' is defined but never used.","'Component' is defined but never used.","'Search' is defined but never used.","'gridApi' is assigned a value but never used.","'searchDivStyle' is assigned a value but never used.","'searchStyle' is assigned a value but never used.","'username' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]