[{"/Users/mahirmahboob/Desktop/nodejs/frontend/src/index.js":"1","/Users/mahirmahboob/Desktop/nodejs/frontend/src/App.js":"2","/Users/mahirmahboob/Desktop/nodejs/frontend/src/reportWebVitals.js":"3","/Users/mahirmahboob/Desktop/nodejs/frontend/src/Notfound.js":"4","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/homepage/homepage.js":"5","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Signup.js":"6","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/navbar/navbar.js":"7","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/quiz/quiz.js":"8","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/searchPage/searchPage.js":"9","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Login.js":"10","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/surpriseMe/surpriseMe.js":"11","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/genre/genre.js":"12","/Users/mahirmahboob/Desktop/nodejs/frontend/src/testData/data.js":"13"},{"size":530,"mtime":1633449520447,"results":"14","hashOfConfig":"15"},{"size":2205,"mtime":1632672688518,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1632672688523,"results":"17","hashOfConfig":"15"},{"size":346,"mtime":1632672688518,"results":"18","hashOfConfig":"15"},{"size":4824,"mtime":1633541081183,"results":"19","hashOfConfig":"15"},{"size":4361,"mtime":1633540901208,"results":"20","hashOfConfig":"15"},{"size":2089,"mtime":1632672688520,"results":"21","hashOfConfig":"15"},{"size":5525,"mtime":1633457720894,"results":"22","hashOfConfig":"15"},{"size":6299,"mtime":1632950402054,"results":"23","hashOfConfig":"15"},{"size":4046,"mtime":1633184494778,"results":"24","hashOfConfig":"15"},{"size":1599,"mtime":1633321439814,"results":"25","hashOfConfig":"15"},{"size":2411,"mtime":1633452037521,"results":"26","hashOfConfig":"15"},{"size":3288,"mtime":1633448993412,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ueyz9t",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/mahirmahboob/Desktop/nodejs/frontend/src/index.js",[],["60","61"],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/App.js",["62"],"import React, { Component } from \"react\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Notfound from \"./Notfound\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Homepage from \"./components/homepage/homepage\";\nimport { SearchPage } from \"./components/searchPage/searchPage\";\nimport GenreRecs from \"./components/genre/genre\";\nimport QuizRecs from \"./components/quiz/quiz\";\nimport SurpriseMeRecs from \"./components/surpriseMe/surpriseMe\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: false,\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin() {\n    console.log(\"in handle login:  \");\n    this.setState({\n      isLoggedIn: true,\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <div className=\"App\">\n            <Navbar />\n            <div>\n              <Route\n                exact\n                path={\"/\"}\n                render={(props) => (\n                  <Login\n                    {...props}\n                    isLoggedIn={this.state.isLoggedIn}\n                    handleLogin={this.handleLogin}\n                  />\n                )}\n              />\n              <Route path=\"/home\" component={Homepage} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/searchdir\" component={SearchPage} />\n              <Route path=\"/recGenre\" component={GenreRecs} />\n              <Route path=\"/recQuiz\" component={QuizRecs} />\n              <Route path=\"/recSurpriseMe\" component={SurpriseMeRecs} />\n              {/* <Route component={Notfound} /> */}\n            </div>\n          </div>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n// import './App.css';\n// import { MainContainer } from './mainContainer';\n// import Navbar from './components/navbar/navbar';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Navbar/>\n//       <MainContainer/>\n//     </div>\n//   );\n// }\n\n// export default App;\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/reportWebVitals.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/Notfound.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/homepage/homepage.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Signup.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/navbar/navbar.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/quiz/quiz.js",["63","64","65","66","67","68"],"import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button'; \nconst url = \"/takeaquiz\";\n\n// var res = {name: \"\", picture: \"\",author: \"\", genre: \"\", synopsis: \"\" };\nclass QuizRecs extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      genre: '',\n      age: '',\n      page: '',\n      date: '',\n      triggers: '',\n      recommendations:[],\n    }\n  }\n\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    // get form data out of state\n    //const { genre, age, page, date, triggers } = this.state;\n\n    fetch(url , {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n          genre: this.state.genre,\n          age: this.state.age,\n          page: this.state.page,\n          date: this.state.date,\n          triggers: this.state.triggers,\n      })\n    }).then(result =>result.json())\n      .then(data => {\n        this.setState({\n          recommendations:data\n        })\n      })\n    } // end of onSubmit\n\n    render() {\n      const { classes } = this.props;\n      const {genre, age, page, date, triggers } = this.state;\n\n      return (\n        <div className=\"session\">\n        <h1>Quiz</h1>\n          <div className=\"register-form\">\n            <form onSubmit={this.onSubmit}>\n              <select value={this.value} name=\"genre\" onChange={this.onChange}> Pick the first genre\n                <option value=\"romance\">Romance</option>\n                <option value=\"history\">History</option>\n                <option value=\"mystery\">Mystery</option>\n                <option value=\"cooking\">Cooking</option>\n                <option value=\"fantasy\">Fantasy</option>\n                <option value=\"drama\">Drama</option>\n                <option value=\"action\">Action</option>\n                <option value=\"adventure\">Adventure</option>\n                <option value=\"detective\">Detective</option>\n              </select>\n              <select value={this.value} name=\"age\" onChange={this.onChange}> Pick a age range\n                <option value=\"child\">child</option>\n                <option value=\"young adult\">young adult</option>\n                <option value=\"adult\">adult</option>\n                <option value=\"all\">all</option>\n              </select>\n              <select value={this.value} name=\"page\" onChange={this.onChange}> Pick a page range\n                <option value=\"100\">100</option>\n                <option value=\"150\">150</option>\n                <option value=\"200\">200</option>\n                <option value=\"250\">250</option>\n                <option value=\"300\">300</option>\n                <option value=\"350\">350</option>\n                <option value=\"400\">400+</option>\n              </select>\n              <select value={this.value} name=\"date\" onChange={this.onChange}> Pick publication date\n                <option value=\"1960\">1960</option>\n                <option value=\"1970\">1970</option>\n                <option value=\"1980\">1980</option>\n                <option value=\"1990\">1990</option>\n                <option value=\"2000\">2000</option>\n                <option value=\"2005\">2005</option>\n                <option value=\"2010\">2010</option>\n                <option value=\"2015\">2015</option>\n                <option value=\"2020\">2020</option>\n                <option value=\"2021\">2021</option>\n              </select>\n              <select value={this.value} name=\"triggers\" onChange={this.onChange}> Pick a triggers\n                <option value=\"violence\">violence</option>\n                <option value=\"death\">death</option>\n                <option value=\"horror\">horror</option>\n                <option value=\"blood\">blood</option>\n                <option value=\"suicide\">suicide</option>\n                <option value=\"kidnapping\">kidnapping</option>\n                <option value=\"war\">war</option>\n                <option value=\"vampire\">vampire</option>\n                <option value=\"Animal cruelty\">Animal cruelty</option>\n                <option value=\"No trigger warning\">No trigger warning</option>\n              </select>\n              <Button type='Submit' variant=\"contained\" color=\"primary\">\n                Submit\n              </Button>\n            </form>\n            <div> The answer should be here</div>\n            <div className=\"quiz-recommendation\">\n                  {\n                      this.state.recommendations.map(rec=>(\n                          <div key={rec.book_name}className=\"book-recommendation\">\n                          <h2> Title: {rec.book_name}</h2>\n                          <h2> Author: {rec.author}</h2>\n                          <h2> Rating: {rec.rating}</h2>\n                          <h2> Age Range: {rec.age_range}</h2>\n                          <h2> Page: {rec.maximum_pages}</h2>\n                          <h2> Publication Date: {rec.publication_date}</h2>\n                          <h2> Best Seller: {rec.best_seller}</h2>\n                          <h2>Series: {rec.series}</h2>\n                          </div>\n                        ))\n                  }\n            </div>\n          </div>\n        </div>\n\n      );\n  }\n}\n\nexport default QuizRecs;\n\n\n/*\nclass QuizRecs extends Component {\n    constructor() {\n        super();\n        this.state = {\n           \n        }\n    }\n    \n    render() {\n     \n     return (  \n        <div>\n         Take a quiz\n         <Quiz quiz={quiz}/>\n        </div>\n    );\n    }\n}\n\n\n*/","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/searchPage/searchPage.js",["69"],"import React from \"react\";\nimport { useState } from 'react';\nimport { useEffect } from \"react\";\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\n// const url = \"http://localhost:3000/search\";\nconst SearchPage = () => {\n    //test data\n    /*\n    const rowData = [\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"},\n        {title: \"Love Life\", author: \"Amy Azelia\", genre: \"Romance\", votes: 1000000, publishingDate: \"6/10/21\", link:\"http://allbooks.com/Love-Life\" },\n        {title: \"The Secret Society\", author: \"Adrien Potter\", genre: \"Mystery\", votes: 100000, publishingDate: \"7/10/12\", link:\"http://allbooks.com/TheSS\"},\n        {title: \"Ancient Civilization\", author: \"Gideon Aberforth\", genre: \"History\", votes: 100002, publishingDate: \"10/10/20\", link:\"http://allbooks.com/AncCiv\"},\n        {title: \"Elite Guardians\", author: \"Loki Odinson\", genre: \"SciFi\", votes: 10005, publishingDate: \"9/10/11\", link:\"http://allbooks.com/Elguard\"}\n    ];\n    */\n\n    //const rowData = [];\n\n    useEffect( () => {\n        fetchItems();\n    }, []);\n\n    const [rowData, setItems] = useState([]);\n\n    const fetchItems = async () => {\n        const data = await fetch('/searchup');\n        const rowData = await data.json();\n        setItems(rowData);\n    };\n\n\n    // const [rowData, setRowData] = useState([]);\n\n    // useEffect(() => {\n    //     fetch(url)\n    //     .then(result => result.json())\n    //     .then(rowData => setRowData(rowData))\n    // }, []);\n\n\n\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumApi, setGridColumnApi] = useState(null);\n    const searchDivStyle={backgroundColor:\"#dedede\",padding:10}\n    const searchStyle={width:\"40%\",padding:\"10px 20px\",borderRadius:0,outline:0,fontSize:\"100%\"}\n    function onGridReady(params) {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n      }\n    const onFilterTextChange=(e)=>{\n      gridApi.setQuickFilter(e.target.value)\n    }\n    \n    return (\n        <div>\n            <div style={{padding:10, fontSize:40}}>Search our directory!</div>\n            {/* To Do: add filters and sortablilty */}\n            <div style={searchDivStyle}>\n                <input type=\"search\" style={searchStyle} onChange={onFilterTextChange} placeholder=\"search here...\"/>\n            </div>\n            <div className=\"ag-theme-alpine\" style={{paddingLeft: 90, height: 600, width: 1250}}>\n                <AgGridReact\n                    rowData={rowData}\n                    onGridReady={onGridReady}\n                    >\n                    <AgGridColumn field=\"book_name\" filter={true}></AgGridColumn>\n                    <AgGridColumn field=\"author\" filter={true}></AgGridColumn>\n                    <AgGridColumn field=\"genre\" filter=\"agTextColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"rating\" filter=\"agNumberColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"age_range\" filter=\"agTextColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"maximum_pages\" filter=\"agNumberColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"publication_date\" filter=\"agNumberColumnFilter\"></AgGridColumn>\n                    <AgGridColumn field=\"trigger_warning\" filter=\"agTextColumnFilter\"></AgGridColumn>\n                </AgGridReact>\n            </div>\n        </div>\n    );\n};\n    \nexport {SearchPage};\n// // const url = '/rest/login'\n\n// class SearchPage extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n           \n//         }\n//     }\n    \n//     render() {\n     \n//      return (  \n//         <div>\n//          Search me!\n         \n//         </div>\n//     );\n//     }\n// }\n\n// export default SearchPage;\n\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/Login.js",[],"/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/surpriseMe/surpriseMe.js",["70","71"],"import React, { Component } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState} from \"react\";\nimport {link} from \"react-router-dom\";\n\n\nfunction SurpriseMeRecs() {\n    useEffect( () => {\n        fetchItems();\n    }, []);\n\n    const [items, setItems] = useState([]);\n\n    const fetchItems = async () => {\n        const data = await fetch('/surpriseme');\n        const items = await data.json();\n        setItems(items);\n    };\n\n    return(\n        <section>\n        {\n            items.map( item => (\n                <div>\n                    <h1 class=\"book_title\">The book Title is: <spanone>{item.book_name}</spanone></h1>\n                    <h4 class=\"book_genre\">The book Genre is: <spantwo>{item.genre}</spantwo></h4>\n                    <h4 class=\"book_rating\">The Overall Rating is: <spanthree>{item.rating}</spanthree></h4>\n                    <h4 class=\"book_author\">The Author of this book is: <spanfour>{item.author}</spanfour></h4>\n                    <h4 class=\"book_agerange\">The book age_range is: <spanfive>{item.age_range}</spanfive></h4>\n                    <h4 class=\"book_pages\">This book contains: <spansix>{item.maximum_pages}</spansix> <extraspan> pages</extraspan></h4>\n                    <h4 class=\"book_publicationyear\">This book was Published in: <spanseven>{item.publication_date}</spanseven></h4>\n                    <h4 class=\"book_triggerwarning\">The book contains some trigger warning like: <spaneight>{item.trigger_warning}</spaneight></h4>\n                </div>\n            ))\n        }\n        </section>\n    );\n}\n\nexport default SurpriseMeRecs;\n","/Users/mahirmahboob/Desktop/nodejs/frontend/src/components/genre/genre.js",["72"],"import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport \"./genre.css\"\nimport books from \"../../testData/data.js\" \n\nclass GenreRecs extends Component {\n    constructor() {\n        super();\n        this.state = {\n           genres: [\"cooking\", \"romance\", \"drama\", \"fantasy\", \"adventure\", \"action\", \"detective\"], \n           recommendations:[],\n        };\n    };\n   \n    //when a button is clicked, it is going to send a request to server to get the data\n    //and when we get the data back, we would be able to put that in the recommendation array\n    //the get request will get data specific for that genre\n    //data is the array of all the book recommendation\n    //the data that we get back is json data\n\n    \n    handler=(genre)=>{\n        //this is to request data from the server\n       fetch(`http://localhost:5000/home/${genre}`)\n       .then(response=>response.json()) //converts to js. has the parsed data from the server and that becomes the parameter for the next .then\n       .then(data=>{\n        this.setState({\n            recommendations:data //data is response.json\n           })\n       })\n      \n    //this using dummy data incase there is no server. Use this when not connnected to the server.\n    /*\n    const recs=books.filter(book=>book.genre===genre)\n      this.setState({\n          recommendations:recs \n      })\n    */\n\n      } // this is the end of handler\n    \n    render() {\n     return (  \n        <div >\n        <div className=\"button\">\n        {this.state.genres.map(genre => (\n        <Button key={genre} onClick={ ()=>this.handler(genre)} className=\"right\" variant=\"warning\" size=\"lg\">\n        {genre}\n        </Button>\n        ))}\n        \n    </div>\n    <div className=\"recs mt-4\">\n        {\n            this.state.recommendations.map(rec=>(\n                <div key={rec.book_name}className=\"book-card\">\n                <h2> Title: {rec.book_name}</h2>\n                <h2> Author: {rec.author}</h2>\n                <h2> Rating: {rec.rating}</h2>\n                <h2> Age Range: {rec.age_range}</h2>\n                <h2> Page: {rec.maximum_pages}</h2>\n                <h2> Publication Date: {rec.publication_date}</h2>\n                <h2> Best Seller: {rec.best_seller}</h2>\n                <h2>Series: {rec.series}</h2>\n                </div>\n            ))\n        }\n    </div>\n        </div>\n    );\n    }\n}\n\nexport default GenreRecs;","/Users/mahirmahboob/Desktop/nodejs/frontend/src/testData/data.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":16},{"ruleId":"77","severity":1,"message":"81","line":50,"column":15,"nodeType":"79","messageId":"80","endLine":50,"endColumn":22},{"ruleId":"77","severity":1,"message":"82","line":51,"column":14,"nodeType":"79","messageId":"80","endLine":51,"endColumn":19},{"ruleId":"77","severity":1,"message":"83","line":51,"column":21,"nodeType":"79","messageId":"80","endLine":51,"endColumn":24},{"ruleId":"77","severity":1,"message":"84","line":51,"column":26,"nodeType":"79","messageId":"80","endLine":51,"endColumn":30},{"ruleId":"77","severity":1,"message":"85","line":51,"column":32,"nodeType":"79","messageId":"80","endLine":51,"endColumn":36},{"ruleId":"77","severity":1,"message":"86","line":51,"column":38,"nodeType":"79","messageId":"80","endLine":51,"endColumn":46},{"ruleId":"77","severity":1,"message":"87","line":62,"column":12,"nodeType":"79","messageId":"80","endLine":62,"endColumn":24},{"ruleId":"77","severity":1,"message":"88","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"89","line":4,"column":9,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"90","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Notfound' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'genre' is assigned a value but never used.","'age' is assigned a value but never used.","'page' is assigned a value but never used.","'date' is assigned a value but never used.","'triggers' is assigned a value but never used.","'gridColumApi' is assigned a value but never used.","'Component' is defined but never used.","'link' is defined but never used.","'books' is defined but never used.","no-global-assign","no-unsafe-negation"]